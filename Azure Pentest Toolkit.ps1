$asciiArt = @"
       !
       !
       ^
      / \
     /___\
    |=   =|
    |     |
    |     |
    |     |
    |     |
    |     |
    |     |
    |     |
    |     |
    |     |
   /|##!##|\
  / |##!##| \
 /  |##!##|  \
|  / ^ | ^ \  |
| /  ( | )  \ |
|/   ( | )   \|
    ((   ))
   ((  :  ))
   ((  :  ))
    ((   ))
     (( ))
      ( )
       .
       .
       .

  _______ _____ _     _  ______ _______
 |_____|  ____/ |     | |_____/ |______
 |     | /_____ |_____| |    \_ |______
 
  _____  _______ __   _ _______ _______ _______ _______
 |_____] |______ | \  |    |    |______ |______    |   
 |       |______ |  \_|    |    |______ ______|    |                                                       													 
 _______  _____   _____         _     _ _____ _______
    |    |     | |     | |      |____/    |      |   
    |    |_____| |_____| |_____ |    \_ __|__    |   
                                                   

by @Cr4ck3rJ4ck5			   

"@

Write-Host $asciiArt

#Configure the "Bypass" execution policy, which allows any script to be run without any warnings or prompts
Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass

#This sets the global error action preference variable to "Continue"
$ErrorActionPreference = 'Continue'

#upgrade pip
python -m pip install --upgrade pip

#This command installs the Azure PowerShell module that is required for AzureHound to function
Install-Module Az -AllowClobber -Scope CurrentUser

#Install the Azure Resource Manager (ARM) PowerShell module from the PowerShell Gallery
Install-Module -Name AzureRM -AllowClobber

#Install the Azure PowerShell module from the PowerShell Gallery
Install-Module -Name Azure -AllowClobber

#Use the Install-Module cmdlet to install the Az PowerShell module
Install-Module -Name Az -Repository PSGallery -Force

#Install MSOnline per MicroBurst requirements
Install-Module MSOnline -AllowClobber

#Install Azure CLI
$ProgressPreference = 'SilentlyContinue'; Invoke-WebRequest -Uri https://aka.ms/installazurecliwindows -OutFile .\AzureCLI.msi; Start-Process msiexec.exe -Wait -ArgumentList '/I AzureCLI.msi /quiet'; Remove-Item .\AzureCLI.msi

#Install ExchangeOnlineManagement per CrowdStrike Reporting Tool for Azure requirements 
Install-Module -Name ExchangeOnlineManagement -Scope CurrentUser

#Use Chocolatey to install NodeJS
choco install nodejs

#Create a folder called "My Tools"
New-Item -ItemType Directory -Path "$HOME\My Tools"

#Create a subfolder called "Azure"
New-Item -ItemType Directory -Path "$HOME\My Tools\Azure"

#Create a subfolder called "Reconnaissance"
New-Item -ItemType Directory -Path "$HOME\My Tools\Azure\Reconnaissance"

#Create a subfolder called "Vulnerability Assessment"
New-Item -ItemType Directory -Path "$HOME\My Tools\Azure\Vulnerability Assessment"

#Create a subfolder called "Exploitation"
New-Item -ItemType Directory -Path "$HOME\My Tools\Azure\Exploitation"

#Create a subfolder called "Post-Exploitation"
New-Item -ItemType Directory -Path "$HOME\My Tools\Azure\Post-Exploitation"

#Use Chocolatey to install Go
choco install go

#Install Python
choco install python

#Install Rust
choco install rust

#Install Requests, which allows you to send HTTP/1.1 requests 
pip install requests

#Uninstall AzureAD module, which conflicts with Azure-AccessPermissions
Uninstall-Module azuread -force

#Install AzureAD
Install-Module -Name AzureAD -force

#Install Requests-Future, which makes use of python 3.2â€™s concurrent.futures or the backport for prior versions of python.
pip install requests-futures

#Install ordereddict per ROADtools requirements
pip install ordereddict

#Install pipenv per ROADtools requirements
pip install pipenv

#Install dnspython, a DNS toolkit for Python
pip install dnspython

#Install astroid per omigood requirements
pip install astroid

#Install autopep8 per omigood requirements
pip install autopep8

#Install azure-core per omigood requirements
pip install azure-core

#Install azure-identity per omigood requirements
pip install azure-identity

#Install azure-mgmt-compute per omigood requirements
pip install azure-mgmt-compute

#Install azure-mgmt-core per omigood requirements
pip install azure-mgmt-core

#Install azure-mgmt-storage per BlobHunter
pip install azure-mgmt-storage

#Install PyInputPlus per BlobHunter
pip install PyInputPlus

#Install azure-mgmt-network per omigood requirements
pip install azure-mgmt-network

#Install azure-mgmt-resource per omigood requirements
pip install azure-mgmt-resource

#Install backcall per omigood requirements
pip install backcall

#Install black per omigood requirements
pip install black

#Install certifi per omigood requirements
pip install certifi

#Install cffi per omigood requirements
pip install cffi

#Install charset-normalizer per omigood requirements
pip install charset-normalizer

#Install click8 per omigood requirements
pip install click8

#Install cryptography per omigood requirements
pip install cryptography

#Install debugpy per omigood requirements
pip install debugpy

#Install decorator per omigood requirements
pip install decorator

#Install entrypoints per omigood requirements
pip install entrypoints

#Install Flask-reCaptcha per omigood requirements
pip install Flask-reCaptcha

#Install idna per omigood requirements
pip install idna

#Install ipykernel per omigood requirements
pip install ipykernel

#Install ipython per omigood requirements
pip install ipython

#Install Jinja2 per omigood requirements
pip install Jinja2

#Install jupyter-client per omigood requirements
pip install jupyter-client

#Install jupyter-core per omigood requirements
pip install jupyter-core

#Install lazy-object-proxy per omigood requirements
pip install lazy-object-proxy

#Install MarkupSafe per omigood requirements
pip install MarkupSafe

#Install matplotlib-inline per omigood requirements
pip install matplotlib-inline

#Install mccabe per omigood requirements
pip install mccabe

#Install msal per omigood requirements
pip install msal

#Install msal-extensions per omigood requirements
pip install msal-extensions

#Install msrest per omigood requirements
pip install msrest

#Install mypy-extensions per omigood requirements
pip install mypy-extensions

#Install nest-asyncio per omigood requirements
pip install nest-asyncio

#Install numpy per omigood requirements
pip install numpy

#Install oauthlib per omigood requirements
pip install oauthlib

#Install packaging per omigood requirements
pip install packaging

#Install parso per omigood requirements
pip install parso

#Install pathspec per omigood requirements
pip install pathspec

#Install pexpect per omigood requirements
pip install pexpect

#Install pickleshare per omigood requirements
pip install pickleshare

#Install platformdirs per omigood requirements
pip install platformdirs

#Install portalocker per omigood requirements
pip install portalocker

#Install prompt-toolkit per omigood requirements
pip install prompt-toolkit

#Install ptyprocess per omigood requirements
pip install ptyprocess

#Install pycodestyle per omigood requirements
pip install pycodestyle

#Install pycparser per omigood requirements
pip install pycparser

#Install pyflakes per omigood requirements
pip install pyflakes

#Install Pygments per omigood requirements
pip install Pygments

#Install PyJWT per omigood requirements
pip install PyJWT

#Intall pylint per omigood requirements
pip install pylint

#Install pyparsing per omigood requirements
pip install pyparsing

#Install python-dateutil per omigood requirements
pip install python-dateutil

#Install netaddr per ScoutSuite requirements
pip install netaddr

#Install pytz per omigood requirements
pip install pytz

#Install pyzmq per omigood requirements
pip install pyzmq

#Install regex per omigood requirements
pip install regex

#Install requests-oauthlib per omigood requirements
pip install requests-oauthlib

#Install toml per omigood requirements
pip install toml

#Install tomli per omigood requirements
pip install tomli

#Install tornado per omigood requirements
pip install tornado

#Install traitlets per omigood requirements
pip install traitlets

#Install typing-extensions per omigood requirements
pip install typing-extensions

#Install urllib3_1_26_2 per omigood requirements
pip install urllib3_1_26_2

#Install urllib3 per omigood requirements
pip install urllib3

#Install wcwidth per omigood requirements
pip install wcwidth

#Install Werkzeug per omigood requirements
pip install Werkzeug

#Install wrapt per omigood requirements
pip install wrapt

#Install ipython_genutils per omigood requirements
pip install ipython_genutils

#Install isodate per omigood requirements
pip install isodate

#Install isort per omigood requirements
pip install isort

#Install itsdangerous per omigood requirements
pip install itsdangerous

#Install jedi per omigood requirements
pip install jedi

#Install netifaces per Responder requirements
pip install netifaces==0.10.4

#Install pycryptodomex per Impacket requirements
pip install pycryptodomex

#Install charset-normalizer per Impacket requirements
pip install charset-normalizer

#Install ldap3 per Impacket requirements
pip install ldap3

#Install six per Impacket requirements
pip install six

#Install pyasn1 per Impacket requirements
pip install pyasn1

#Install ldapdomaindump per Impacket requirements
pip install ldapdomaindump

#Install future per Impacket requirements
pip install future

#Install Flask per Impacket requirements
pip install Flask

#Install pyreadline per Impacket requirements
pip install pyreadline

#Install dsinternals per Impacket requirements
pip install dsinternals

#Install pyOpenSSL per Impacket requirements
pip install pyOpenSSL

#Install beautifulsoup4 per o365spray requirements
pip install beautifulsoup4

#Install colorama per o365spray requirements
pip install colorama

#Install lxml per o365spray requirements
pip install lxml

#Install flake8 per ScoutSuite requirements
pip install flake8

#Install codecov per ScoutSuite requirements
pip install codecov

#Install coveralls per ScoutSuite requirements
pip install coveralls

#Install autopep8 per ScoutSuite requirements
pip install autopep8

#Install pytest per ScoutSuite requirements
pip install pytest

#Install mypy per ScoutSuite requirements
pip install mypy

#Install pytest-cov per ScoutSuite requirements
pip install pytest-cov

#Install azure-identity per ScoutSuite requirements
pip install azure-identity

#Install azure-mgmt-resource per ScoutSuite requirements
pip install azure-mgmt-resource

#Install azure-mgmt-storage per ScoutSuite requirements
pip install azure-mgmt-storage

#Install azure-mgmt-monitor per ScoutSuite requirements
pip install azure-mgmt-monitor

#Install azure-mgmt-sql per ScoutSuite requirements
pip install azure-mgmt-sql

#Install azure-mgmt-security per ScoutSuite requirements
pip install azure-mgmt-security

#Install azure-mgmt-keyvault per ScoutSuite requirements
pip install azure-mgmt-keyvault

#Install azure-mgmt-network per ScoutSuite requirements
pip install azure-mgmt-network

#Install azure-mgmt-redis per ScoutSuite requirements
pip install azure-mgmt-redis

#Install azure-mgmt-web per ScoutSuite requirements
pip install azure-mgmt-web

#Install azure-mgmt-compute per ScoutSuite requirements
pip install azure-mgmt-compute

#Install azure-mgmt-authorization per ScoutSuite requirements
pip install azure-mgmt-authorization

#Install azure-mgmt-rdbms per ScoutSuite requirements
pip install azure-mgmt-rdbms

#Install sqlitedict per ScoutSuite requirements
pip install sqlitedict

#Install CherryPy per ScoutSuite requirements
pip install CherryPy

#Install cherrypy-cors per ScoutSuite requirements
pip install cherrypy-cors

#Install coloredlogs per ScoutSuite requirements
pip install coloredlogs

#Install asyncio-throttle per ScoutSuite requirements
pip install asyncio-throttle

#Install roadrecon, which will automatically add the `roadrecon` command to your PATH per ROADtools requirements
pip install roadrecon

#Install roadlib per ROADtools requirements
pip install roadlib

#Install Microsoft.Graph per Azure-AccessPermissions.ps1 requirements
Install-Module Microsoft.Graph -Force

#Install AzureADPreview per Azure-AccessPermissions.ps1 requirements
Install-Module AzureADPreview -Force

#Install AADInternals from PowerShell Gallery
Install-Module AADInternals -Force

#Install azure-common per BlobHunter requirements
pip install azure-common

#Install 7-Zip module
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force
Set-PSRepository -Name 'PSGallery' -SourceLocation "https://www.powershellgallery.com/api/v2" -InstallationPolicy Trusted
Install-Module -Name 7Zip4PowerShell -Force

#Install AADInternals
Invoke-WebRequest -Uri "https://github.com/Gerenios/AADInternals/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Reconnaissance\AADInternals.zip"

#Extract AADInternals Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Reconnaissance\AADInternals.zip" -DestinationPath "$HOME\My Tools\Azure\Reconnaissance\AADInternals" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Reconnaissance\AADInternals" | Unblock-File

#Remove original AADInternals Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Reconnaissance\AADInternals.zip"

#Install CloudFox
Invoke-WebRequest -Uri "https://github.com/BishopFox/cloudfox/archive/refs/heads/main.zip" -OutFile "$HOME\My Tools\Azure\Vulnerability Assessment\CloudFox.zip"

#Extract CloudFox Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Vulnerability Assessment\CloudFox.zip" -DestinationPath "$HOME\My Tools\Azure\Vulnerability Assessment\CloudFox" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Vulnerability Assessment\CloudFox" | Unblock-File

#Remove original CloudFox Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Vulnerability Assessment\CloudFox.zip"

#Install Azure-AccessPermissions
Invoke-WebRequest -Uri "https://github.com/csandker/Azure-AccessPermissions/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Reconnaissance\Azure-AccessPermissions.zip"

#Extract Azure-AccessPermissions Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Reconnaissance\Azure-AccessPermissions.zip" -DestinationPath "$HOME\My Tools\Azure\Reconnaissance\Azure-AccessPermissions" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Reconnaissance\Azure-AccessPermissions" | Unblock-File

#Remove original Azure-AccessPermissions Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Reconnaissance\Azure-AccessPermissions.zip"

#Install ScubaGear
Invoke-WebRequest -Uri "https://github.com/cisagov/ScubaGear/archive/refs/heads/main.zip" -OutFile "$HOME\My Tools\Azure\Vulnerability Assessment\ScubaGear.zip"

#Extract ScubaGear Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Vulnerability Assessment\ScubaGear.zip" -DestinationPath "$HOME\My Tools\Azure\Vulnerability Assessment\ScubaGear" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Vulnerability Assessment\ScubaGear" | Unblock-File

#Remove original ScubaGear Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Vulnerability Assessment\ScubaGear.zip"

#Install Prowler
Invoke-WebRequest -Uri "https://github.com/prowler-cloud/prowler/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Vulnerability Assessment\Prowler.zip"

#Extract Prowler Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Vulnerability Assessment\Prowler.zip" -DestinationPath "$HOME\My Tools\Azure\Vulnerability Assessment\Prowler" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Vulnerability Assessment\Prowler" | Unblock-File

#Remove original Prowler Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Vulnerability Assessment\Prowler.zip"

#Install ScoutSuite
Invoke-WebRequest -Uri "https://github.com/nccgroup/ScoutSuite/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Vulnerability Assessment\ScoutSuite.zip"

#Extract ScoutSuite Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Vulnerability Assessment\ScoutSuite.zip" -DestinationPath "$HOME\My Tools\Azure\Vulnerability Assessment\ScoutSuite" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Vulnerability Assessment\ScoutSuite" | Unblock-File

#Remove original ScoutSuite Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Vulnerability Assessment\ScoutSuite.zip"

#Install SkyArk
#Invoke-WebRequest -Uri "https://github.com/cyberark/SkyArk/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Vulnerability Assessment\SkyArk.zip"

#Extract SkyArk Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Vulnerability Assessment\SkyArk.zip" -DestinationPath "$HOME\My Tools\Azure\Vulnerability Assessment\SkyArk" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Vulnerability Assessment\SkyArk" | Unblock-File

#Remove original ScoutSuite Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Vulnerability Assessment\SkyArk.zip"

#Install CrowdStrike Reporting Tool for Azure
Invoke-WebRequest -Uri "https://github.com/CrowdStrike/CRT/archive/refs/heads/main.zip" -OutFile "$HOME\My Tools\Azure\Vulnerability Assessment\CrowdStrike Reporting Tool for Azure.zip"

#Extract SkyArk Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Vulnerability Assessment\CrowdStrike Reporting Tool for Azure.zip" -DestinationPath "$HOME\My Tools\Azure\Vulnerability Assessment\CrowdStrike Reporting Tool for Azure" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Vulnerability Assessment\CrowdStrike Reporting Tool for Azure" | Unblock-File

#Remove original ScoutSuite Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Vulnerability Assessment\CrowdStrike Reporting Tool for Azure.zip"

#Install Sparrow
nvoke-WebRequest -Uri "https://github.com/cisagov/Sparrow/archive/refs/heads/develop.zip" -OutFile "$HOME\My Tools\Azure\Vulnerability Assessment\Sparrow.zip"

#Extract Sparrow Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Vulnerability Assessment\Sparrow.zip" -DestinationPath "$HOME\My Tools\Azure\Vulnerability Assessment\Sparrow" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Vulnerability Assessment\Sparrow" | Unblock-File

#Remove original Sparrow Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Vulnerability Assessment\Sparrow.zip"

#Install mkdocs-material per Monkey365 requirements
pip install mkdocs-material

#Install mkdocs-material-extensions per Monkey365 requirements
pip install mkdocs-material-extensions

#Install mkdocs-redirects per Monkey365 requirements
pip install mkdocs-redirects

#Install MicroBurst
Invoke-WebRequest -Uri "https://github.com/NetSPI/MicroBurst/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Vulnerability Assessment\MicroBurst.zip"

#Extract MicroBurst Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Vulnerability Assessment\MicroBurst.zip" -DestinationPath "$HOME\My Tools\Azure\Vulnerability Assessment\MicroBurst" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Vulnerability Assessment\MicroBurst" | Unblock-File

#Remove original MicroBurst Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Vulnerability Assessment\MicroBurst.zip"

#Install Monkey365
Invoke-WebRequest -Uri "https://github.com/silverhack/monkey365/archive/refs/heads/main.zip" -OutFile "$HOME\My Tools\Azure\Vulnerability Assessment\Monkey365.zip"

#Extract Monkey365 Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Vulnerability Assessment\Monkey365.zip" -DestinationPath "$HOME\My Tools\Azure\Vulnerability Assessment\Monkey365" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Vulnerability Assessment\Monkey365" | Unblock-File

#Remove original Monkey365 Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Vulnerability Assessment\Monkey365.zip"

#Install AzureADAssessment
Install-Module AzureADAssessment -Force -Scope CurrentUser

#Install omigood
Invoke-WebRequest -Uri "https://github.com/marcosimioni/omigood/archive/refs/heads/main.zip" -OutFile "$HOME\My Tools\Azure\Vulnerability Assessment\omigood.zip"

#Extract omigood Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Vulnerability Assessment\omigood.zip" -DestinationPath "$HOME\My Tools\Azure\Vulnerability Assessment\omigood" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Vulnerability Assessment\omigood" | Unblock-File

#Remove original omigood Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Vulnerability Assessment\omigood.zip"

#Install adconnectdump
Invoke-WebRequest -Uri "https://github.com/fox-it/adconnectdump/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Reconnaissance\adconnectdump.zip"

#Extract adconnectdump Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Reconnaissance\adconnectdump.zip" -DestinationPath "$HOME\My Tools\Azure\Reconnaissance\adconnectdump" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Reconnaissance\adconnectdump" | Unblock-File

#Remove original adconnectdump Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Reconnaissance\adconnectdump.zip"

#Install azucar
Invoke-WebRequest -Uri "https://github.com/nccgroup/azucar/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Reconnaissance\azucar.zip"

#Extract azucar Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Reconnaissance\azucar.zip" -DestinationPath "$HOME\My Tools\Azure\Reconnaissance\azucar" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Reconnaissance\azucar" | Unblock-File

#Remove original azucar Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Reconnaissance\azucar.zip"

#Install BlobHunter
Invoke-WebRequest -Uri "https://github.com/cyberark/BlobHunter/archive/refs/heads/main.zip" -OutFile "$HOME\My Tools\Azure\Reconnaissance\BlobHunter.zip"

#Extract BlobHunter Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Reconnaissance\BlobHunter.zip" -DestinationPath "$HOME\My Tools\Azure\Reconnaissance\BlobHunter" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Reconnaissance\BlobHunter" | Unblock-File

#Remove original BlobHunter Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Reconnaissance\BlobHunter.zip"

#Install cloud_enum
Invoke-WebRequest -Uri "https://github.com/initstring/cloud_enum/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Reconnaissance\cloud_enum.zip"

#Extract cloud_enum Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Reconnaissance\cloud_enum.zip" -DestinationPath "$HOME\My Tools\Azure\Reconnaissance\cloud_enum" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Reconnaissance\cloud_enum" | Unblock-File

#Remove original cloud_enum Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Reconnaissance\cloud_enum.zip"

#Install Hawk
Invoke-WebRequest -Uri "https://github.com/T0pCyber/hawk/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Reconnaissance\Hawk.zip"

#Extract Hawk Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Reconnaissance\Hawk.zip" -DestinationPath "$HOME\My Tools\Azure\Reconnaissance\Hawk" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Reconnaissance\Hawk" | Unblock-File

#Remove original Hawk Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Reconnaissance\Hawk.zip"

#Install o365creeper
Invoke-WebRequest -Uri "https://github.com/LMGsec/o365creeper/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Reconnaissance\o365creeper.zip"

#Extract o365creeper Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Reconnaissance\o365creeper.zip" -DestinationPath "$HOME\My Tools\Azure\Reconnaissance\o365creeper" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Reconnaissance\o365creeper" | Unblock-File

#Remove original o365creeper Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Reconnaissance\o365creeper.zip"

#Install o365enum
Invoke-WebRequest -Uri "https://github.com/gremwell/o365enum/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Reconnaissance\o365enum.zip"

#Extract o365enum Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Reconnaissance\o365enum.zip" -DestinationPath "$HOME\My Tools\Azure\Reconnaissance\o365enum" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Reconnaissance\o365enum" | Unblock-File

#Remove original o365enum Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Reconnaissance\o365enum.zip"

#Install o365recon
Invoke-WebRequest -Uri "https://github.com/nyxgeek/o365recon/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Reconnaissance\o365recon.zip"

#Extract o365recon Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Reconnaissance\o365recon.zip" -DestinationPath "$HOME\My Tools\Azure\Reconnaissance\o365recon" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Reconnaissance\o365recon" | Unblock-File

#Remove original o365recon Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Reconnaissance\o365recon.zip"

#Install ROADtools
Invoke-WebRequest -Uri "https://github.com/dirkjanm/ROADtools/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Reconnaissance\ROADtools.zip"

#Extract ROADtools Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Reconnaissance\ROADtools.zip" -DestinationPath "$HOME\My Tools\Azure\Reconnaissance\ROADtools" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Reconnaissance\ROADtools" | Unblock-File

#Remove original ROADtools Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Reconnaissance\ROADtools.zip"

#Install AzureHound
Invoke-WebRequest -Uri "https://github.com/BloodHoundAD/AzureHound/releases/download/v2.0.2/azurehound-windows-amd64.zip" -OutFile "$HOME\My Tools\Azure\Reconnaissance\AzureHound.zip"

#Extract AzureHound Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Reconnaissance\AzureHound.zip" -DestinationPath "$HOME\My Tools\Azure\Reconnaissance\AzureHound" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Reconnaissance\AzureHound" | Unblock-File

#Remove original AzureHound Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Reconnaissance\AzureHound.zip"

#Install TeamFiltration
Invoke-WebRequest -Uri "https://github.com/Flangvik/TeamFiltration.git" -OutFile "$HOME\My Tools\Azure\Reconnaissance\TeamFiltration.zip"

#Extract TeamFiltration Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Reconnaissance\TeamFiltration.zip" -DestinationPath "$HOME\My Tools\Azure\Reconnaissance\TeamFiltration" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Reconnaissance\TeamFiltration" | Unblock-File

#Remove original TeamFiltration Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Reconnaissance\TeamFiltration.zip"

#Install CloudBrute
Invoke-WebRequest -Uri "https://github.com/0xsha/CloudBrute/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Exploitation\CloudBrute.zip"

#Extract CloudBrute Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Exploitation\CloudBrute.zip" -DestinationPath "$HOME\My Tools\Azure\Exploitation\CloudBrute" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Exploitation\CloudBrute" | Unblock-File

#Remove original CloudBrute Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Exploitation\CloudBrute.zip"

#Install lava
Invoke-WebRequest -Uri "https://github.com/mattrotlevi/lava/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Exploitation\lava.zip"

#Extract lava Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Exploitation\lava.zip" -DestinationPath "$HOME\My Tools\Azure\Exploitation\lava" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Exploitation\lava" | Unblock-File

#Remove original lava Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Exploitation\lava.zip"

#Install MFASweep
Invoke-WebRequest -Uri "https://github.com/mattrotlevi/lava/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Exploitation\MFASweep.zip"

#Extract MFASweep Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Exploitation\MFASweep.zip" -DestinationPath "$HOME\My Tools\Azure\Exploitation\MFASweep" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Exploitation\MFASweep" | Unblock-File

#Remove original MFASweep Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Exploitation\MFASweep.zip"

#Install PowerZure
Invoke-WebRequest -Uri "https://github.com/hausec/PowerZure/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Post-Exploitation\PowerZure.zip"

#Extract PowerZure Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Post-Exploitation\PowerZure.zip" -DestinationPath "$HOME\My Tools\Azure\Post-Exploitation\PowerZure" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Post-Exploitation\PowerZure" | Unblock-File

#Remove original PowerZure Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Post-Exploitation\PowerZure.zip"

#Install AzureADLateralMovement
Invoke-WebRequest -Uri "https://github.com/hausec/PowerZure/archive/refs/heads/master.zip" -OutFile "$HOME\My Tools\Azure\Post-Exploitation\AzureADLateralMovement.zip"

#Extract AzureADLateralMovement Zip file
Expand-Archive -Path "$HOME\My Tools\Azure\Post-Exploitation\AzureADLateralMovement.zip" -DestinationPath "$HOME\My Tools\Azure\Post-Exploitation\AzureADLateralMovement" -Force

#Removes the "blocked" attribute from a file that has been downloaded from the Internet or another untrusted source.
Get-ChildItem -Recurse "$HOME\My Tools\Azure\Post-Exploitation\AzureADLateralMovement" | Unblock-File

#Remove original AzureADLateralMovement Zip file
Remove-Item -Path "$HOME\My Tools\Azure\Post-Exploitation\AzureADLateralMovement.zip"
